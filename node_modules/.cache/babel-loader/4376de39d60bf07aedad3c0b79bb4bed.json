{"ast":null,"code":"import { UPDATE_STATE } from \"../actionTypes/adminNewsActionType\";\nimport axios from \"axios\";\nimport { API_PATH } from \"../../tools/constants\";\nimport { toast } from \"react-toastify\";\nexport function updateState(data) {\n  return {\n    type: UPDATE_STATE,\n    payload: data\n  };\n}\nexport function saveFile(data) {\n  return function (dispatch) {\n    let image = new FormData();\n    image.append(\"image\", data);\n    axios.post(API_PATH + \"file/save\", image).then(res => {\n      console.log(res);\n\n      if (res.status === 200) {\n        dispatch(updateState({\n          selectedImage: res.data.id\n        }));\n      } else {\n        toast.error(\"Xatolik!!!\");\n      }\n    });\n  };\n}\nexport function addNews(data) {\n  return function (dispatch) {\n    axios.post(API_PATH + \"news\", data).then(res => {\n      console.log(res);\n\n      if (res.data.success) {\n        toast.success(res.data.message);\n        dispatch(getNews());\n        dispatch(updateState({\n          modalOpen: false,\n          selectedImage: \"\"\n        }));\n      } else {\n        toast.error(res.data.message);\n      }\n    });\n  };\n}\nexport function getNews() {\n  return function (dispatch) {\n    axios.get(API_PATH + \"news\").then(res => {\n      dispatch(updateState({\n        news: res.data.data\n      }));\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        payload: {\n          pageLoading: false\n        }\n      });\n    });\n  };\n}\nexport function deleteNews(id) {\n  return function (dispatch) {\n    axios.delete(API_PATH + \"news/\" + id).then(res => {\n      if (res.data.success) {\n        toast.success(res.data.message);\n        dispatch(getNews());\n        dispatch(updateState({\n          deleteModalOpen: false\n        }));\n      } else {\n        toast.error(res.data.message);\n      }\n    });\n  };\n}\nexport function getNewsByMenu(url) {\n  return function (dispatch) {\n    dispatch({\n      type: \"CHANGE_LOADING\",\n      payload: {\n        pageLoading: true\n      }\n    });\n    axios.get(API_PATH + \"news/byMenu/\" + url).then(res => {\n      dispatch(updateState({\n        newsByMenu: res.data.data\n      }));\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        payload: {\n          pageLoading: false\n        }\n      });\n    });\n  };\n}\nexport function getOneNews(url) {\n  return function (dispatch) {\n    dispatch({\n      type: \"CHANGE_LOADING\",\n      payload: {\n        pageLoading: true\n      }\n    });\n    axios.get(API_PATH + \"news/\" + url).then(res => {\n      dispatch(updateState({\n        oneNews: res.data.data\n      }));\n      dispatch({\n        type: \"CHANGE_LOADING\",\n        payload: {\n          pageLoading: false\n        }\n      });\n    });\n  };\n} //\"news/getLast\"","map":{"version":3,"sources":["E:/ishlar/app-dostlikdon-new/src/redux/actions/adminNewsAction.js"],"names":["UPDATE_STATE","axios","API_PATH","toast","updateState","data","type","payload","saveFile","dispatch","image","FormData","append","post","then","res","console","log","status","selectedImage","id","error","addNews","success","message","getNews","modalOpen","get","news","pageLoading","deleteNews","delete","deleteModalOpen","getNewsByMenu","url","newsByMenu","getOneNews","oneNews"],"mappings":"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","sourcesContent":["import {UPDATE_STATE} from \"../actionTypes/adminNewsActionType\";\r\nimport axios from \"axios\";\r\nimport {API_PATH} from \"../../tools/constants\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nexport function updateState (data){\r\n    return {\r\n        type: UPDATE_STATE,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function saveFile(data){\r\n    return function (dispatch) {\r\n        let image = new FormData();\r\n        image.append(\"image\", data);\r\n\r\n        axios.post(API_PATH + \"file/save\", image)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.status === 200){\r\n                    dispatch(updateState({selectedImage: res.data.id}))\r\n                } else {\r\n                    toast.error(\"Xatolik!!!\");\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function addNews(data){\r\n    return function (dispatch) {\r\n        axios.post(API_PATH + \"news\", data)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.data.success){\r\n                    toast.success(res.data.message)\r\n                    dispatch(getNews());\r\n                    dispatch(updateState({modalOpen: false, selectedImage: \"\"}));\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getNews(){\r\n    return function (dispatch) {\r\n        axios.get(API_PATH + \"news\")\r\n            .then(res => {\r\n                dispatch(updateState({news: res.data.data}));\r\n                dispatch({type: \"CHANGE_LOADING\", payload: {pageLoading: false}})\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function deleteNews(id){\r\n    return function (dispatch) {\r\n        axios.delete(API_PATH + \"news/\" + id)\r\n            .then(res => {\r\n                if (res.data.success){\r\n                    toast.success(res.data.message);\r\n                    dispatch(getNews());\r\n                    dispatch(updateState({deleteModalOpen: false}))\r\n                }else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getNewsByMenu(url){\r\n    return function (dispatch){\r\n        dispatch({type: \"CHANGE_LOADING\", payload: {pageLoading: true}})\r\n        axios.get(API_PATH + \"news/byMenu/\" + url)\r\n            .then(res => {\r\n                dispatch(updateState({newsByMenu: res.data.data}));\r\n                dispatch({type: \"CHANGE_LOADING\", payload: {pageLoading: false}})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getOneNews(url){\r\n    return function (dispatch) {\r\n        dispatch({type: \"CHANGE_LOADING\", payload: {pageLoading: true}})\r\n\r\n        axios.get(API_PATH + \"news/\" + url)\r\n            .then(res => {\r\n                dispatch(updateState({oneNews: res.data.data}));\r\n                dispatch({type: \"CHANGE_LOADING\", payload: {pageLoading: false}})\r\n            })\r\n    }\r\n}\r\n\r\n\r\n//\"news/getLast\""]},"metadata":{},"sourceType":"module"}