{"ast":null,"code":"var _jsxFileName = \"E:\\\\ishlar\\\\app-dostlikdon-new\\\\src\\\\components\\\\AdminMenus.js\";\nimport React, { Component } from 'react';\nimport AdminLayout from \"./AdminLayout\";\nimport { Button, Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { updateState } from \"../redux/actions/adminNewsAction\";\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { addMenu, deleteMenu, getMenus, getAllMenus } from \"../redux/actions/adminMenuAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass AdminMenus extends Component {\n  componentDidMount() {\n    this.props.getAllMenus();\n  }\n\n  render() {\n    const changeModal = () => {\n      this.props.updateState({\n        modalOpen: !this.props.modalOpen\n      });\n    };\n\n    const changeDeleteModal = () => {\n      this.props.updateState({\n        deleteModalOpen: !this.props.deleteModalOpen\n      });\n    };\n\n    const generateUrl = text => text.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]+/g, '');\n\n    const changeUrl = e => {\n      this.props.updateState({\n        generatedUrl: generateUrl(e.target.value)\n      });\n    };\n\n    const saveMenu = (event, values) => {\n      this.props.addMenu(values);\n    };\n\n    return /*#__PURE__*/_jsxDEV(AdminLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-news\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Menus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"success\",\n              onClick: changeModal,\n              children: \"Qo'shish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u2116\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name (uz)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name (ru)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name (en)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Parent menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.props.menus.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.nameUz\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.nameRu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.nameEn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.parentMenuName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary mr-2\",\n                  onClick: () => {\n                    this.props.updateState({\n                      selectedMenu: item\n                    });\n                    changeModal();\n                  },\n                  children: \"E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  onClick: () => {\n                    this.props.updateState({\n                      selectedIdForDelete: item.id\n                    });\n                    changeDeleteModal();\n                  },\n                  children: \"D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: this.props.modalOpen,\n          toggle: () => {\n            this.props.updateState({\n              selectedMenu: {}\n            });\n            changeModal();\n          },\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            onValidSubmit: saveMenu,\n            model: this.props.selectedMenu,\n            children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n              children: [this.props.selectedMenu.id ? /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"id\",\n                value: this.props.selectedMenu.id,\n                className: \"d-none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this) : \"\", /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"nameUz\",\n                type: \"text\",\n                onChange: changeUrl,\n                label: \"Name (uz)\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"nameRu\",\n                type: \"text\",\n                label: \"Name (ru)\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"nameEn\",\n                type: \"text\",\n                label: \"Name (en)\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"submenu\",\n                value: this.props.isSubMenu,\n                onChange: () => this.props.updateState({\n                  isSubMenu: !this.props.isSubMenu\n                }),\n                type: \"checkbox\",\n                label: \"This menu is submenu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), this.props.isSubMenu ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"parentId\",\n                  type: \"select\",\n                  label: \"Parent menu\",\n                  children: this.props.menus.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.id,\n                    children: item.nameUz\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"url\",\n                  type: \"text\",\n                  value: this.props.generatedUrl,\n                  label: \"Url\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"success\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                onClick: () => {\n                  this.props.updateState({\n                    selectedMenu: {}\n                  });\n                  changeModal();\n                },\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: this.props.deleteModalOpen,\n          toggle: changeDeleteModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Rostdan ham o'chirmoqchimisiz?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: () => {\n                this.props.deleteMenu(this.props.selectedIdForDelete);\n              },\n              children: \"Ha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: changeDeleteModal,\n              children: \"Yo'q\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    modalOpen: state.menu.modalOpen,\n    deleteModalOpen: state.menu.deleteModalOpen,\n    isSubMenu: state.menu.isSubMenu,\n    generatedUrl: state.menu.generatedUrl,\n    menus: state.menu.menus,\n    selectedIdForDelete: state.menu.selectedIdForDelete,\n    selectedMenu: state.menu.selectedMenu\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateState,\n  addMenu,\n  getMenus,\n  deleteMenu,\n  getAllMenus\n})(AdminMenus);","map":{"version":3,"sources":["E:/ishlar/app-dostlikdon-new/src/components/AdminMenus.js"],"names":["React","Component","AdminLayout","Button","Modal","ModalBody","ModalFooter","connect","updateState","AvForm","AvField","addMenu","deleteMenu","getMenus","getAllMenus","AdminMenus","componentDidMount","props","render","changeModal","modalOpen","changeDeleteModal","deleteModalOpen","generateUrl","text","toLowerCase","replace","changeUrl","e","generatedUrl","target","value","saveMenu","event","values","menus","map","item","index","nameUz","nameRu","nameEn","parentMenuName","selectedMenu","selectedIdForDelete","id","isSubMenu","mapStateToProps","state","menu"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport AdminLayout from \"./AdminLayout\";\r\nimport {Button, Modal, ModalBody, ModalFooter} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateState} from \"../redux/actions/adminNewsAction\";\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation';\r\nimport {addMenu, deleteMenu, getMenus, getAllMenus} from \"../redux/actions/adminMenuAction\";\r\n\r\nclass AdminMenus extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAllMenus();\r\n    }\r\n\r\n    render() {\r\n        const changeModal = () => {\r\n            this.props.updateState({modalOpen: !this.props.modalOpen})\r\n        }\r\n        const changeDeleteModal = () => {\r\n            this.props.updateState({deleteModalOpen: !this.props.deleteModalOpen})\r\n        }\r\n        const generateUrl = (text) => text.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]+/g, '');\r\n\r\n        const changeUrl = (e) => {\r\n            this.props.updateState({generatedUrl: generateUrl(e.target.value)});\r\n        }\r\n\r\n        const saveMenu = (event, values) => {\r\n\r\n            this.props.addMenu(values);\r\n        }\r\n\r\n        return (\r\n            <AdminLayout>\r\n                <div className='admin-news'>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div><h5>Menus</h5></div>\r\n                        <div>\r\n                            <Button type='button' color='success' onClick={changeModal}>Qo'shish</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table className='table table-striped table-hover mt-4'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>Name (uz)</th>\r\n                                <th>Name (ru)</th>\r\n                                <th>Name (en)</th>\r\n                                <th>Parent menu</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.props.menus.map((item, index) => (\r\n                            <tr>\r\n                               <td>{(index + 1)}</td>\r\n                               <td>{item.nameUz}</td>\r\n                               <td>{item.nameRu}</td>\r\n                               <td>{item.nameEn}</td>\r\n                               <td>{item.parentMenuName}</td>\r\n                                <td>\r\n                                    <button type='button' className='btn btn-primary mr-2' onClick={() => {this.props.updateState({selectedMenu: item}); changeModal()}}>E</button>\r\n                                    <button type='button' className='btn btn-danger' onClick={() => {this.props.updateState({selectedIdForDelete: item.id});changeDeleteModal()}}>D</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <Modal isOpen={this.props.modalOpen} toggle={() => {this.props.updateState({selectedMenu: {}});changeModal()}}>\r\n                        <AvForm onValidSubmit={saveMenu} model={this.props.selectedMenu}>\r\n                            <ModalBody>\r\n                                {this.props.selectedMenu.id ?\r\n                                    <AvField name=\"id\" value={this.props.selectedMenu.id} className=\"d-none\"/>\r\n                                    : \"\"\r\n                                }\r\n                                <AvField\r\n                                    name=\"nameUz\"\r\n                                    type=\"text\"\r\n                                    onChange={changeUrl}\r\n                                    label=\"Name (uz)\"\r\n                                    required\r\n                                />\r\n                                <AvField\r\n                                    name=\"nameRu\"\r\n                                    type=\"text\"\r\n                                    label=\"Name (ru)\"\r\n                                    required\r\n                                />\r\n                                <AvField\r\n                                    name=\"nameEn\"\r\n                                    type=\"text\"\r\n                                    label=\"Name (en)\"\r\n                                    required\r\n                                />\r\n                                <AvField\r\n                                    name=\"submenu\"\r\n                                    value={this.props.isSubMenu}\r\n                                    onChange={() => this.props.updateState({isSubMenu: !this.props.isSubMenu})}\r\n                                    type=\"checkbox\"\r\n                                    label=\"This menu is submenu\"\r\n                                />\r\n\r\n                                {this.props.isSubMenu ?\r\n                                    <>\r\n                                        <AvField name=\"parentId\" type=\"select\" label=\"Parent menu\">\r\n                                            {this.props.menus.map((item) => (\r\n                                                <option value={item.id}>{item.nameUz}</option>\r\n                                            ))}\r\n                                        </AvField>\r\n                                        <AvField name=\"url\" type=\"text\" value={this.props.generatedUrl} label=\"Url\"/>\r\n                                    </>\r\n                                    : \"\"\r\n                                }\r\n\r\n\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button type=\"submit\" color=\"success\">Save</Button>\r\n                                <Button type=\"button\" onClick={() => {this.props.updateState({selectedMenu: {}});changeModal()}}>Close</Button>\r\n                            </ModalFooter>\r\n                        </AvForm>\r\n                    </Modal>\r\n                    <Modal isOpen={this.props.deleteModalOpen} toggle={changeDeleteModal}>\r\n                        <ModalBody>\r\n                            <h5>Rostdan ham o'chirmoqchimisiz?</h5>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type='button' className='btn btn-danger' onClick={() => {this.props.deleteMenu(this.props.selectedIdForDelete)}}>Ha</button>\r\n                            <button type='button' className='btn btn-secondary' onClick={changeDeleteModal}>Yo'q</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </AdminLayout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        modalOpen: state.menu.modalOpen,\r\n        deleteModalOpen: state.menu.deleteModalOpen,\r\n        isSubMenu: state.menu.isSubMenu,\r\n        generatedUrl: state.menu.generatedUrl,\r\n        menus: state.menu.menus,\r\n        selectedIdForDelete: state.menu.selectedIdForDelete,\r\n        selectedMenu: state.menu.selectedMenu\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {updateState, addMenu, getMenus, deleteMenu, getAllMenus})(AdminMenus);"]},"metadata":{},"sourceType":"module"}